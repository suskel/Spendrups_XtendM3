{"programModules":{"EXT390MI":{"program":"EXT390MI","triggers":{},"transactions":{"AddEXTOCH":{"sourceUuid":"7fdc21f9-a2e3-4b0a-a03d-f26c7deacd88","name":"AddEXTOCH","program":"EXT390MI","description":"Add records in EXTOCH","active":true,"multi":false,"modified":1743272776097,"modifiedBy":"EXT_SK","outputFields":[],"inputFields":[{"name":"WHLO","description":"Warehouse","length":3,"mandatory":true,"type":"A","refField":null},{"name":"REPN","description":"Receiving number","length":10,"mandatory":true,"type":"N","refField":null},{"name":"CUNO","description":"Customer","length":10,"mandatory":false,"type":"A","refField":null},{"name":"RDFI","description":"Ready for Invoice","length":1,"mandatory":false,"type":"N","refField":null},{"name":"IVCD","description":"Invoice created","length":8,"mandatory":false,"type":"N","refField":null},{"name":"IVOR","description":"Invoice order","length":10,"mandatory":false,"type":"A","refField":null},{"name":"CBEI","description":"Credit before inspection","length":1,"mandatory":false,"type":"N","refField":null},{"name":"RMRK","description":"Return mark","length":1,"mandatory":false,"type":"N","refField":null},{"name":"VEXI","description":"Validate std dB, 1 = no and 0 = yes","length":1,"mandatory":false,"type":"N","refField":null}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"7fdc21f9-a2e3-4b0a-a03d-f26c7deacd88":{"uuid":"7fdc21f9-a2e3-4b0a-a03d-f26c7deacd88","updated":1752563628276,"updatedBy":"EXT_SK","created":1740659689888,"createdBy":"EXT_SK","apiVersion":"0.15","beVersion":"16.0.0.20250521011729.6","language":"GROOVY","codeHash":"D1DD01BA8F0CF261BB8C87667AC12F53DCA16A5C94DA24ACA7780D1EA2D7D2C5","code":""}}}