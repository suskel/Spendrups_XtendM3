{"programModules":{"EXT390MI":{"program":"EXT390MI","triggers":{},"transactions":{"UpdEXTOCH":{"sourceUuid":"571394a4-d588-432a-80bf-0b97299384b7","name":"UpdEXTOCH","program":"EXT390MI","description":"Update records in EXTOCH","active":true,"multi":false,"modified":1743272956698,"modifiedBy":"EXT_SK","outputFields":[],"inputFields":[{"name":"WHLO","description":"Warehouse","length":3,"mandatory":true,"type":"A","refField":null},{"name":"REPN","description":"Receiving number","length":10,"mandatory":true,"type":"N","refField":null},{"name":"CUNO","description":"Customer","length":10,"mandatory":false,"type":"A","refField":null},{"name":"RDFI","description":"Ready for Invoice","length":1,"mandatory":false,"type":"N","refField":null},{"name":"IVCD","description":"Invoice created","length":8,"mandatory":false,"type":"N","refField":null},{"name":"IVOR","description":"Invoice order","length":10,"mandatory":false,"type":"A","refField":null},{"name":"CBEI","description":"Credit before inspection","length":1,"mandatory":false,"type":"N","refField":null},{"name":"RMRK","description":"Return mark","length":1,"mandatory":false,"type":"N","refField":null}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"571394a4-d588-432a-80bf-0b97299384b7":{"uuid":"571394a4-d588-432a-80bf-0b97299384b7","updated":1752563871238,"updatedBy":"EXT_SK","created":1740663118878,"createdBy":"EXT_SK","apiVersion":"0.15","beVersion":"16.0.0.20250521011729.6","language":"GROOVY","codeHash":"5322E3C369B2B354F2AF6C077A5BFEE35630FD2227DA7590788502D2B618A1ED","code":""}}}