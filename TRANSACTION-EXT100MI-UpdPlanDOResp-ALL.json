{"programModules":{"EXT100MI":{"program":"EXT100MI","triggers":{},"transactions":{"UpdPlanDOResp":{"sourceUuid":"deba0b68-32c5-4ebf-98dd-b9e2fb617128","name":"UpdPlanDOResp","program":"EXT100MI","description":"Update RESP in MDOPLP (no std API) ","active":true,"multi":false,"modified":1742919289654,"modifiedBy":"EXT_SK","outputFields":[],"inputFields":[{"name":"PLPN","description":"Planned order","length":7,"mandatory":true,"type":"N","refField":null},{"name":"PLPS","description":"Subnumber planned order","length":3,"mandatory":false,"type":"N","refField":null},{"name":"RESP","description":"Responsible","length":10,"mandatory":false,"type":"A","refField":null}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"deba0b68-32c5-4ebf-98dd-b9e2fb617128":{"uuid":"deba0b68-32c5-4ebf-98dd-b9e2fb617128","updated":1752561114594,"updatedBy":"EXT_SK","created":1742918292518,"createdBy":"EXT_SK","apiVersion":"0.15","beVersion":"16.0.0.20250521011729.6","language":"GROOVY","codeHash":"1E2CFA1049148DED4D6A354EC35A9733019F793F3B9857EA4EAAF5C5526A7849","code":"LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCiBFeHRlbnNpb24gTmFtZTogRVhUMTAwTUkvVXBkUGxhbkRPUmVzcA0KIFR5cGU6IEV4dGVuZE0zVHJhbnNhY3Rpb24NCiBTY3JpcHQgQXV0aG9yOiBTdXNhbm5hIEtlbGxhbmRlciAtIEVsdmVuaXRlDQogRGF0ZTogMjAyNS0wMy0yNQ0KIERlc2NyaXB0aW9uOiBVcGRhdGUgTURPUExQLlJFU1AsIG5vIEFQSSBpbiBzdGFuZGFyZC4gDQogICAgICAgICAgICAgIEFuIEVSIGlzIGNyZWF0ZWQsIG5vIDExOTI3MCANCg0KIFJldmlzaW9uIEhpc3Rvcnk6DQogTmFtZSAgICAgICAgICAgICAgICAgICAgRGF0ZSAgICAgICAgICAgICBWZXJzaW9uICAgICAgICAgIERlc2NyaXB0aW9uIG9mIENoYW5nZXMNCiBTdXNhbm5hIEtlbGxhbmRlciAgICAgICAyMDI1LTAzLTI1ICAgICAgIDEuMCAgICAgICAgICAgICAgU1AwMDM1IC0gVXBkYXRlIE1ET1BMUC5SRVNQLCBubyBBUEkgaW4gc3RhbmRhcmQuICANCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCmltcG9ydCBqYXZhLnRpbWUuTG9jYWxEYXRlVGltZQ0KaW1wb3J0IGphdmEudGltZS5mb3JtYXQuRGF0ZVRpbWVGb3JtYXR0ZXINCnB1YmxpYyBjbGFzcyBVcGRQbGFuRE9SZXNwIGV4dGVuZHMgRXh0ZW5kTTNUcmFuc2FjdGlvbiB7IA0KICBwcml2YXRlIGZpbmFsIE1JQVBJIG1pDQogIHByaXZhdGUgZmluYWwgRGF0YWJhc2VBUEkgZGF0YWJhc2UNCiAgcHJpdmF0ZSBmaW5hbCBQcm9ncmFtQVBJIHByb2dyYW0NCiAgcHJpdmF0ZSBmaW5hbCBMb2dnZXJBUEkgbG9nZ2VyDQogIA0KICBpbnQgY29tcGFueSA9IDANCiAgaW50IHBsYW5uZWRPcmRlciA9IDANCiAgaW50IHN1Yk51bWJlclBsYW5uZWRPcmRlciA9IDANCiAgU3RyaW5nIHJlc3BvbnNpYmxlID0gIiIgDQogIA0KICBpbnQgZW50cnlEYXRlID0gMCANCiAgDQogIA0KICBwdWJsaWMgVXBkUGxhbkRPUmVzcChNSUFQSSBtaSwgRGF0YWJhc2VBUEkgZGF0YWJhc2UsIFByb2dyYW1BUEkgcHJvZ3JhbSwgTG9nZ2VyQVBJIGxvZ2dlcikgew0KICAgIHRoaXMubWkgPSBtaQ0KICAgIHRoaXMuZGF0YWJhc2UgPSBkYXRhYmFzZQ0KICAgIHRoaXMucHJvZ3JhbSA9IHByb2dyYW0NCiAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcg0KICB9ICAgDQogIA0KICAvKg0KICAgIG1haW4gbWV0aG9kDQogICovDQogIHB1YmxpYyB2b2lkIG1haW4oKSB7ICANCiAgICBpZihyZXRyaWV2ZUlucHV0UGFyYW1ldGVycygpKSB7IA0KICAgICAgdXBkYXRlTURPUExQKCkNCiAgICB9IA0KICB9IA0KICAgDQogIC8qDQogICAgdXBkYXRlTURPUExQIC0gdXBkYXRlIHBsYW5uZWQgb3JkZXIgd2l0aCByZXNwb25zaWJsZQ0KICAqLw0KICBwdWJsaWMgdm9pZCB1cGRhdGVNRE9QTFAoKSB7ICANCiAgICANCiAgREJBY3Rpb24gcXJ5TURPUExQID0gZGF0YWJhc2UudGFibGUoIk1ET1BMUCIpLmluZGV4KCIwMCIpLmJ1aWxkKCkNCiAgREJDb250YWluZXIgY29uTURPUExQID0gcXJ5TURPUExQLmdldENvbnRhaW5lcigpDQogIGNvbk1ET1BMUC5zZXQoIkRPQ09OTyIsIGNvbXBhbnkpDQogIGNvbk1ET1BMUC5zZXQoIkRPUExQTiIsIHBsYW5uZWRPcmRlcikNCiAgY29uTURPUExQLnNldCgiRE9QTFBTIiwgc3ViTnVtYmVyUGxhbm5lZE9yZGVyKQ0KICBxcnlNRE9QTFAucmVhZExvY2soY29uTURPUExQLCB1cGRhdGVDYWxsQmFjaykgDQp9DQoNCiAgQ2xvc3VyZTw/PiB1cGRhdGVDYWxsQmFjayA9IHsgTG9ja2VkUmVzdWx0IGxvY2tlZFJlc3VsdCAtPg0KDQogICAgbG9ja2VkUmVzdWx0LnNldCgiRE9SRVNQIiwgZ2V0U3RyaW5nRnJvbUlucHV0UGFyYW1ldGVyKG1pLmluRGF0YS5nZXQoIlJFU1AiKS50b1N0cmluZygpLCAoU3RyaW5nKWxvY2tlZFJlc3VsdC5nZXQoIkRPUkVTUCIpKSkNCiAgDQogICAgLy8gVXBkYXRlIGNoYW5nZWQgaW5mb3JtYXRpb24NCiAgICBpbnQgY2hhbmdlTm8gPSBsb2NrZWRSZXN1bHQuZ2V0KCJET0NITk8iKQ0KICAgIGludCBuZXdDaGFuZ2VObyA9IGNoYW5nZU5vICsgMSANCiAgICBsb2NrZWRSZXN1bHQuc2V0KCJET0xNRFQiLCBlbnRyeURhdGUpDQoNCiAgICBsb2NrZWRSZXN1bHQuc2V0KCJET0NITk8iLCBuZXdDaGFuZ2VObykNCiAgICBsb2NrZWRSZXN1bHQuc2V0KCJET0NISUQiLCBwcm9ncmFtLmdldFVzZXIoKSkNCiAgICBsb2NrZWRSZXN1bHQudXBkYXRlKCkNCiAgfSANCiAgDQogIA0KICAgIC8qDQogICAgcmV0cmlldmUgYW5kIGNoZWNrIGlucHV0IHBhcmFtZXRlcnMgDQoJKi8NCglib29sZWFuIHJldHJpZXZlSW5wdXRQYXJhbWV0ZXJzKCkgew0KCSAgDQoJCWNvbXBhbnkgPSAoSW50ZWdlcilwcm9ncmFtLmdldExEQVpEKCkuQ09OTyAgDQogICAgcGxhbm5lZE9yZGVyID0gcmVtb3ZlTnVsbGZyb21JbnRPYmplY3QobWkuaW4uZ2V0KCJQTFBOIikpIA0KICAgIHN1Yk51bWJlclBsYW5uZWRPcmRlciA9IHJlbW92ZU51bGxmcm9tSW50T2JqZWN0KG1pLmluLmdldCgiUExQUyIpKSAgDQogICAgDQogICAgaWYoIWNoZWNrTURPUExQKHBsYW5uZWRPcmRlcixzdWJOdW1iZXJQbGFubmVkT3JkZXIpKXsNCiAgICAgIG1pLmVycm9yKCJUaGUgcGxhbm5lZCBvcmRlciAke3BsYW5uZWRPcmRlcn0gZG9lcyBub3QgZXhpc3QgaW4gRFBTMTcwIikNCiAgICAgIHJldHVybiBmYWxzZQ0KICAgIH0NCiAgICANCiAgICByZXNwb25zaWJsZSA9IHJlbW92ZU51bGxmcm9tU3RyaW5nT2JqZWN0KG1pLmluLmdldCgiUkVTUCIpKSAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgIGlmKCFpc05lZWROb1ZhbGlkYXRpb24obWkuaW5EYXRhLmdldCgiUkVTUCIpKSl7DQogICAgICBpZihyZXNwb25zaWJsZSA9PSAiIil7DQogICAgICAgICAgbWkuZXJyb3IoIlJlc3BvbnNpYmxlICR7cmVzcG9uc2libGV9IG5lZWRzIHRvIGJlIGZpbGxlZCIpDQogICAgICAgICAgcmV0dXJuIGZhbHNlIA0KICAgICAgfWVsc2V7DQogICAgICAgIGlmKCFjaGVja0NNTlVTUihyZXNwb25zaWJsZSkpeyAgDQogICAgICAgICAgIG1pLmVycm9yKCJSZXNwb25zaWJsZSAke3Jlc3BvbnNpYmxlfSBkb2VzIG5vdCBleGlzdCBpbiBNTlMxNTAiKQ0KICAgICAgICAgICByZXR1cm4gZmFsc2UgDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogICAgDQogICAgcmV0cmlldmVUb2RheXNEYXRlKCkNCiAgICANCiAgICByZXR1cm4gdHJ1ZQ0KCX0NCgkNCgkNCiAgLyoNCiAgICBSZXR1cm4gdHJ1ZSBpZiByZWNvcmQgZXhpc3QuIA0KICAqLw0KICBib29sZWFuIGNoZWNrTURPUExQKGludCBpblBMUE4sIGludCBpblBMUFMpIHsNCiAgICANCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJNRE9QTFAiKS5pbmRleCgiMDAiKS5idWlsZCgpICANCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIGNvbnRhaW5lci5zZXQoIkRPQ09OTyIsIGNvbXBhbnkpIA0KICAgIGNvbnRhaW5lci5zZXQoIkRPUExQTiIsIGluUExQTikgIA0KICAgIGNvbnRhaW5lci5zZXQoIkRPUExQUyIsIGluUExQUykgDQogICAgICANCiAgICBib29sZWFuIGZvdW5kID0gcXVlcnkucmVhZChjb250YWluZXIpDQogICAgDQogICAgaWYgKCFmb3VuZCkgIHsNCiAgICAgIHJldHVybiBmYWxzZSAgDQogICAgfQ0KICAgICANCiAgICByZXR1cm4gdHJ1ZQ0KICB9DQogICANCiAgCQ0KICAvKg0KICAgIFJldHVybiB0cnVlIGlmIHJlY29yZCBleGlzdC4gDQogICovDQogIGJvb2xlYW4gY2hlY2tDTU5VU1IoU3RyaW5nIGluUkVTUCkgew0KICAgIA0KICAgIERCQWN0aW9uIHF1ZXJ5ID0gZGF0YWJhc2UudGFibGUoIkNNTlVTUiIpLmluZGV4KCIwMCIpLmJ1aWxkKCkgIA0KICAgIERCQ29udGFpbmVyIGNvbnRhaW5lciA9IHF1ZXJ5LmdldENvbnRhaW5lcigpDQogICAgY29udGFpbmVyLnNldCgiSlVDT05PIiwgMCkgDQogICAgY29udGFpbmVyLnNldCgiSlVESVZJIiwgIiIpICANCiAgICBjb250YWluZXIuc2V0KCJKVVVTSUQiLCBpblJFU1ApIA0KICAgICAgDQogICAgYm9vbGVhbiBmb3VuZCA9IHF1ZXJ5LnJlYWQoY29udGFpbmVyKQ0KICAgIA0KICAgIGlmICghZm91bmQpICB7DQogICAgICByZXR1cm4gZmFsc2UgIA0KICAgIH0NCiAgICAgDQogICAgcmV0dXJuIHRydWUNCiAgfQ0KICAgDQogIA0KICANCiAgLyoNCiAgICBSZXR1cm4gdHJ1ZSBpZiB2YWxpZGF0aW9uIGlzIG5vdCBuZWVkZWQgDQogICovDQogIGJvb2xlYW4gaXNOZWVkTm9WYWxpZGF0aW9uKFN0cmluZyBpbkZMRCkgeyAgICAgICAgICAgICAgICAgICAgICAgIC8vIGluRmxkIGZvciB0aGUgbnVtZXJpYyB2YWx1ZSBuZWVkcyB0byBiZSAiaW5EYXRhIiBkdWUgdG8gImluIiBjYW5ub3QgaWRlbnRpZnkgIj8iIG9yIGJsYW5rIHZhbHVlLiBGb3IgYWxwaGEgZmllbGQsIHdlIHVzZSAiaW4iDQogICAgaWYgKGluRkxELnRyaW0oKSAhPSAiIiAmJiBpbkZMRC50cmltKCkgIT0gIj8iKXsgICAgICAgICAgICAgICAgICANCiAgICAgICByZXR1cm4gZmFsc2UgDQogICAgfQ0KICAgIGlmKGluRkxELnRyaW0oKSA9PSAiPyIpew0KICAgICAgcmVzcG9uc2libGUgPSAiIg0KICAgICAgcmV0dXJuIGZhbHNlICANCiAgICB9DQogICAgICByZXR1cm4gdHJ1ZSAgDQogIH0gDQogIA0KICANCiAgDQogIC8qDQogICAgR2V0IHRvZGF5cyBkYXRlDQogICovDQogIHB1YmxpYyB2b2lkIHJldHJpZXZlVG9kYXlzRGF0ZSgpIHsNCiAgICBMb2NhbERhdGVUaW1lIGRhdGVUaW1lID0gTG9jYWxEYXRlVGltZS5ub3coKQ0KICAgIGVudHJ5RGF0ZSA9IGRhdGVUaW1lLmZvcm1hdChEYXRlVGltZUZvcm1hdHRlci5vZlBhdHRlcm4oInl5eXlNTWRkIikpLnRvSW50ZWdlcigpIA0KICB9DQogIA0KICAgDQogIC8vIGNoZWNrIGlmIGZpZWxkIGZyb20gTUkgaXMgbnVsbC4gUmV0dXJuIHplcm8gaW4gdGhhdCBjYXNlDQogIGludCByZW1vdmVOdWxsZnJvbUludE9iamVjdChPYmplY3QgZmllbGQpew0KICAgICBpZiAoZmllbGQgPT0gbnVsbCkgeyAgDQogICAgICAgcmV0dXJuIDANCiAgICAgfSBlbHNlIHsNCiAgICAgICByZXR1cm4gKGludCkgZmllbGQNCiAgICAgfQ0KICAgfQ0KICAgDQogICAvLyBjaGVjayBpZiBmaWVsZCBmcm9tIE1JIGlzIG51bGwuIFJldHVybiB6ZXJvIGluIHRoYXQgY2FzZQ0KICAgIFN0cmluZyByZW1vdmVOdWxsZnJvbVN0cmluZ09iamVjdChPYmplY3QgZmllbGQpew0KICAgICBpZiAoZmllbGQgPT0gbnVsbCkgeyAgDQogICAgICAgcmV0dXJuICIiDQogICAgIH0gZWxzZSB7DQogICAgICAgcmV0dXJuIGZpZWxkDQogICAgIH0NCiAgIH0NCiAgICAgDQogIC8qDQogICAgZ2V0IGludCB2YWx1ZSBmcm9tIGlucHV0IHBhcmFtZXRlci4gSGFuZGxlIGJsYW5rIHZhbHVlcyAobm8gdXBkYXRlKSBhbmQgPyAodXBkYXRlIHdpdGggYmxhbmspDQogICAgaW5wdXQgcGFyYW1ldGVyczoNCiAgICBAdmFsdWUgLSB2YWx1ZSBmcm9tIE1JIGlucHV0IHBhcmFtZXRlcg0KICAgIEBmaWVsZCAtIHZhbHVlIGZyb20gZGF0YWJhc2UgKHVzZSB3aGVuIGlucHV0IGhhcyBibGFuayB2YWx1ZSkNCiAgKi8NCiAgU3RyaW5nIGdldFN0cmluZ0Zyb21JbnB1dFBhcmFtZXRlcihTdHJpbmcgdmFsdWUsIFN0cmluZyBmaWVsZCl7IA0KICAgIGlmICh2YWx1ZSA9PSBudWxsIHx8IHZhbHVlLnRyaW0oKSA9PSAiICIgfHwgdmFsdWUudHJpbSgpLmlzRW1wdHkoKSkgeyANCiAgICAgIHJldHVybiBmaWVsZA0KICAgIH0gZWxzZSB7DQogICAgICBpZiAodmFsdWUudHJpbSgpID09ICI/IikgeyAvLyBCbGFuayB2YWx1ZSBpZiA/IA0KICAgICAgICByZXR1cm4gIiINCiAgICAgIH0gZWxzZSB7IA0KICAgICAgICByZXR1cm4gdmFsdWUNCiAgICAgIH0NCiAgICB9IA0KICB9DQp9"}}}