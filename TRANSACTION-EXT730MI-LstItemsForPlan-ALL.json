{"programModules":{"EXT730MI":{"program":"EXT730MI","triggers":{},"transactions":{"LstItemsForPlan":{"sourceUuid":"ec5a2c89-3e7d-44a1-9e84-8e9d062a5571","name":"LstItemsForPlan","program":"EXT730MI","description":"List record from MITBAL and some more dB, calculation","active":true,"multi":true,"modified":1751285994120,"modifiedBy":"EXT_SK","outputFields":[{"name":"PRQT","description":"Proposed qty","length":17,"mandatory":false,"type":"N","refField":null},{"name":"WHLO","description":"Warehouse","length":3,"mandatory":false,"type":"A","refField":null},{"name":"ITNO","description":"Itemnumber","length":15,"mandatory":false,"type":"A","refField":null},{"name":"ITDS","description":"Item description","length":60,"mandatory":false,"type":"A","refField":null},{"name":"GRTI","description":"Group technology class","length":10,"mandatory":false,"type":"A","refField":null},{"name":"SUNO","description":"Supplier","length":10,"mandatory":false,"type":"A","refField":null},{"name":"BUYE","description":"Buyer","length":10,"mandatory":false,"type":"A","refField":null},{"name":"SITE","description":"Supplier item number","length":30,"mandatory":false,"type":"A","refField":null},{"name":"SUNM","description":"Supplier name","length":36,"mandatory":false,"type":"A","refField":null},{"name":"STAT","description":"Status","length":2,"mandatory":false,"type":"A","refField":null},{"name":"UCOS","description":"Standard cost","length":17,"mandatory":false,"type":"N","refField":null},{"name":"SSQT","description":"Safety stock","length":17,"mandatory":false,"type":"N","refField":null},{"name":"EOQT","description":"Order qty","length":17,"mandatory":false,"type":"N","refField":null},{"name":"REQT","description":"Reserved qty","length":17,"mandatory":false,"type":"N","refField":null},{"name":"STQT","description":"Qty in stock","length":17,"mandatory":false,"type":"N","refField":null},{"name":"RSTQ","description":"Qty in stock REN","length":17,"mandatory":false,"type":"N","refField":null},{"name":"RALQ","description":"Allocated qty REN","length":17,"mandatory":false,"type":"N","refField":null},{"name":"ORQA","description":"Purchase qty","length":17,"mandatory":false,"type":"N","refField":null},{"name":"RVQT","description":"Received qty","length":17,"mandatory":false,"type":"N","refField":null},{"name":"RORQ","description":"Qty on order REN","length":17,"mandatory":false,"type":"N","refField":null},{"name":"DEQT","description":"Desired qty","length":17,"mandatory":false,"type":"N","refField":null},{"name":"ALRE","description":"Allocatable REN","length":17,"mandatory":false,"type":"N","refField":null},{"name":"PORE","description":"Remaining purchase","length":17,"mandatory":false,"type":"N","refField":null},{"name":"VARE","description":"Value REN","length":17,"mandatory":false,"type":"N","refField":null},{"name":"RITN","description":"Item number REN","length":15,"mandatory":false,"type":"A","refField":null},{"name":"ALR1","description":"Allocatable","length":17,"mandatory":false,"type":"N","refField":null},{"name":"PPQT","description":"Planned qty","length":17,"mandatory":false,"type":"N","refField":null},{"name":"PQTY","description":"Proposed qty type","length":1,"mandatory":false,"type":"A","refField":null},{"name":"PRDT","description":"Proposed date","length":8,"mandatory":false,"type":"N","refField":null}],"inputFields":[{"name":"WHLO","description":"Warehouse","length":3,"mandatory":true,"type":"A","refField":null},{"name":"FBUY","description":"From buyer","length":10,"mandatory":false,"type":"A","refField":null},{"name":"TBUY","description":"To buyer","length":10,"mandatory":false,"type":"A","refField":null},{"name":"FSTS","description":"From status (MITBAL)","length":2,"mandatory":false,"type":"A","refField":null},{"name":"TSTS","description":"To status (MITBAL)","length":2,"mandatory":false,"type":"A","refField":null},{"name":"FITN","description":"From itemnumber","length":15,"mandatory":false,"type":"A","refField":null},{"name":"TITN","description":"To itemnumber","length":15,"mandatory":false,"type":"A","refField":null}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"ec5a2c89-3e7d-44a1-9e84-8e9d062a5571":{"uuid":"ec5a2c89-3e7d-44a1-9e84-8e9d062a5571","updated":1752565081093,"updatedBy":"EXT_SK","created":1750232319738,"createdBy":"EXT_SK","apiVersion":"0.21","beVersion":"16.0.0.20250521011729.6","language":"GROOVY","codeHash":"5DCA13C766B578DF283A2ECDF62A7BEAB843AFDCAD1545C800CD7451EB134563","code":""}}}