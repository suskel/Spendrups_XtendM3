{"programModules":{"EXT260MI":{"program":"EXT260MI","triggers":{},"transactions":{"CrtDDOCUX":{"sourceUuid":"6ee637f0-edad-4d0c-bd92-eb72029740ca","name":"CrtDDOCUX","program":"EXT260MI","description":"Add record in DDOCUX","active":true,"multi":false,"modified":1742916316337,"modifiedBy":"EXT_SK","outputFields":[],"inputFields":[{"name":"INOU","description":"Direction","length":1,"mandatory":true,"type":"N","refField":null},{"name":"DONR","description":"Documentnumber","length":3,"mandatory":true,"type":"A","refField":null},{"name":"DOVA","description":"Documentvariant","length":2,"mandatory":false,"type":"A","refField":null},{"name":"KCON","description":"Shipment","length":7,"mandatory":false,"type":"N","refField":null}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"6ee637f0-edad-4d0c-bd92-eb72029740ca":{"uuid":"6ee637f0-edad-4d0c-bd92-eb72029740ca","updated":1752563389378,"updatedBy":"EXT_SK","created":1740060874054,"createdBy":"EXT_SK","apiVersion":"0.21","beVersion":"16.0.0.20250521011729.6","language":"GROOVY","codeHash":"1686FEA143722E0E4B12C1A88D2A72A5BFE493C076B970D268CD96842321FC81","code":"LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCiBFeHRlbnNpb24gTmFtZTogRVhUMjYwTUkvQ3J0RERPQ1VYDQogVHlwZTogRXh0ZW5kTTNUcmFuc2FjdGlvbg0KIFNjcmlwdCBBdXRob3I6IFN1c2FubmEgS2VsbGFuZGVyIC0gRWx2ZW5pdGUNCiBEYXRlOiAyMDI1LTAzLTI5DQogRGVzY3JpcHRpb246IENyZWF0ZSByZWNvcmQgaW4gRERPQ1VYIGZvciBkb2N1bWVudCAiOTIwLzAxIiwgIE1XUzY0MFBGIA0KICAgICAgICAgICAgICBBbiBFUiBpcyBjcmVhdGVkLCBubyAxMTkyNjksIG5vIHN0YW5kYXJkIEFQSSBleGlzdCAgDQoNCiBSZXZpc2lvbiBIaXN0b3J5Og0KIE5hbWUgICAgICAgICAgICAgICAgICAgIERhdGUgICAgICAgICAgICAgVmVyc2lvbiAgICAgICAgICBEZXNjcmlwdGlvbiBvZiBDaGFuZ2VzDQogU3VzYW5uYSBLZWxsYW5kZXIgICAgICAgMjAyNS0wMy0yOSAgICAgICAxLjAgICAgICAgICAgICAgIFNQMDAyOSAtIENyZWF0ZSByZWNvcmQgaW4gRERPQ1VYIGZvciBkb2N1bWVudCAiOTIwLzAxIiwgIE1XUzY0MFBGDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQppbXBvcnQgamF2YS50aW1lLkxvY2FsRGF0ZVRpbWUNCmltcG9ydCBqYXZhLnRpbWUuZm9ybWF0LkRhdGVUaW1lRm9ybWF0dGVyDQpwdWJsaWMgY2xhc3MgQ3J0RERPQ1VYIGV4dGVuZHMgRXh0ZW5kTTNUcmFuc2FjdGlvbiB7IA0KICBwcml2YXRlIGZpbmFsIE1JQVBJIG1pDQogIHByaXZhdGUgZmluYWwgRGF0YWJhc2VBUEkgZGF0YWJhc2UNCiAgcHJpdmF0ZSBmaW5hbCBQcm9ncmFtQVBJIHByb2dyYW0NCiAgcHJpdmF0ZSBmaW5hbCBMb2dnZXJBUEkgbG9nZ2VyDQoJcHJpdmF0ZSBmaW5hbCBNSUNhbGxlckFQSSBtaUNhbGxlciANCiAgDQogIGludCBjb21wYW55ID0gMA0KICBpbnQgaW5PdXQgPSAwICANCiAgU3RyaW5nIGRvY3VtZW50TnVtYmVyID0gIiINCiAgU3RyaW5nIGRvY3VtZW50VmFyaWFudCA9ICIiIA0KICBTdHJpbmcgd2FyZWhvdXNlID0gIiINCiAgaW50IHNoaXBtZW50ID0gMA0KICANCiAgbG9uZyBuZXh0TnVtYmVyTG9uZyA9IDANCiAgU3RyaW5nIG5leHROdW1iZXIgPSAiIg0KICBTdHJpbmcgbnVtYmVyU2VyaWVUeXBlID0gIiINCiAgY2hhciBudW1iZXJTZXJpZSA9ICcgJw0KICBTdHJpbmcgbWFzdGVyQm9sTnVtYmVyPSAiIg0KICANCiAgaW50IGVudHJ5RGF0ZSA9IDANCiAgaW50IGVudHJ5VGltZSA9IDANCiAgDQogIA0KICBwdWJsaWMgQ3J0RERPQ1VYKE1JQVBJIG1pLCBEYXRhYmFzZUFQSSBkYXRhYmFzZSwgUHJvZ3JhbUFQSSBwcm9ncmFtLCBMb2dnZXJBUEkgbG9nZ2VyLCBNSUNhbGxlckFQSSBtaUNhbGxlcikgew0KICAgIHRoaXMubWkgPSBtaQ0KICAgIHRoaXMuZGF0YWJhc2UgPSBkYXRhYmFzZQ0KICAgIHRoaXMucHJvZ3JhbSA9IHByb2dyYW0NCiAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcg0KICAgIHRoaXMubWlDYWxsZXIgPSBtaUNhbGxlcg0KICB9ICAgDQogIA0KICAvKg0KICAgIG1haW4gbWV0aG9kDQogICovDQogIHB1YmxpYyB2b2lkIG1haW4oKSB7ICANCiAgICBpZihyZXRyaWV2ZUlucHV0UGFyYW1ldGVycygpKSB7IA0KICAgICAgY3JlYXRlRERPQ1VYKCkNCiAgICB9IA0KICB9IA0KICAgDQogIC8qDQogICAgY3JlYXRlRERPQ1VYIC0gY3JlYXRlIHJlY29yZCBpbiBERE9DVVgsIE1XUzI2MCwgZsO2ciBkb2N1bWVudCAiOTIwLzAwIiANCiAgKi8NCiAgcHVibGljIHZvaWQgY3JlYXRlRERPQ1VYKCkgeyANCiAgICANCiAgICBpZighY2hlY2tERE9DVVgoKSl7DQogICAgICBEQkFjdGlvbiBxcnlERE9DVVggPSBkYXRhYmFzZS50YWJsZSgiRERPQ1VYIikuaW5kZXgoIjAwIikuYnVpbGQoKQ0KICAgICAgREJDb250YWluZXIgY29uRERPQ1VYID0gcXJ5RERPQ1VYLmdldENvbnRhaW5lcigpIA0KICAgICAgY29uRERPQ1VYLnNldCgiREJDT05PIiwgY29tcGFueSkNCiAgICAgIGNvbkRET0NVWC5zZXQoIkRCSU5PVSIsIGluT3V0KSANCiAgICAgIGNvbkRET0NVWC5zZXQoIkRCRE9OUiIsIGRvY3VtZW50TnVtYmVyKQ0KICAgICAgY29uRERPQ1VYLnNldCgiREJET1ZBIiwgZG9jdW1lbnRWYXJpYW50KSANCiAgICAgIGNvbkRET0NVWC5zZXQoIkRCS0NPTiIsIHNoaXBtZW50KQ0KICAgICAgDQogICAgICBjb25ERE9DVVguc2V0KCJEQkdFRFQiLCAwKQ0KICAgICAgY29uRERPQ1VYLnNldCgiREJHRVRNIiwgMCkNCiAgICAgIGNvbkRET0NVWC5zZXQoIkRCRE9EVCIsIDApDQogICAgICBjb25ERE9DVVguc2V0KCJEQlBPVEkiLCAwKQ0KICAgICAgY29uRERPQ1VYLnNldCgiREJGRENHIiwgMCkNCiAgICAgIGNvbkRET0NVWC5zZXQoIkRCRkRNQSIsIDEpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyA9IGFkZGVkIG1hbnVhbCANCiAgICAgIGNvbkRET0NVWC5zZXQoIkRCQ09OTiIsIHNoaXBtZW50KQ0KICAgICAgY29uRERPQ1VYLnNldCgiREJXSExPIiwgd2FyZWhvdXNlKQ0KICAgICAgY29uRERPQ1VYLnNldCgiREJGRFNUIiwgIjA1IikNCg0KICAgICAgDQogICAgICBnZXREZWxpdmVyeURvY3VtZW50TnVtYmVyKG51bWJlclNlcmllLCBudW1iZXJTZXJpZVR5cGUpDQogICAgICBTdHJpbmcgbmV4dE51bWJlckFscGhhID0gbmV4dE51bWJlckxvbmcudG9TdHJpbmcoKS5wYWRMZWZ0KDEwLCAiMCIpICAgICAgICAgICAgICAgIC8vIG1vdmUgbnVtZXJpYyB0byBTdHJpbmcgYW5kIGZpbGwgd2l0aCAwDQogICAgICBjb25ERE9DVVguc2V0KCJEQkZETk8iLG5leHROdW1iZXJBbHBoYSkgDQogICAgICANCiAgICAgIGNvbkRET0NVWC5zZXQoIkRCTUJPTCIsIGdldEJvbE5vKG5leHROdW1iZXJBbHBoYSkpDQogICAgICBjb25ERE9DVVguc2V0KCJEQkNNQkwiLCAxKSANCiAgIA0KICAgDQogICAgICBjb25ERE9DVVguc2V0KCJEQlJHRFQiLCBlbnRyeURhdGUpDQogICAgICBjb25ERE9DVVguc2V0KCJEQkxNRFQiLCBlbnRyeURhdGUpDQogICAgICBjb25ERE9DVVguc2V0KCJEQlJHVE0iLCBlbnRyeVRpbWUpIA0KICAgICAgY29uRERPQ1VYLnNldCgiREJDSE5PIiwgMSkgDQogICAgICBjb25ERE9DVVguc2V0KCJEQkNISUQiLCBwcm9ncmFtLmdldFVzZXIoKSkgDQogDQogICAgICBxcnlERE9DVVguaW5zZXJ0KGNvbkRET0NVWCkgIA0KICAgIH0gDQogIH0gIA0KICANCiAgDQogIC8qDQogICAgcmV0cmlldmUgbnVtYmVyIGZyb20gbnVtYmVyIHNlcmllIA0KICAqLw0KICBib29sZWFuIGdldERlbGl2ZXJ5RG9jdW1lbnROdW1iZXIoIGNoYXIgaW5OQklELCBTdHJpbmcgaW5OQlRZKSB7DQogICAgTWFwPFN0cmluZywgU3RyaW5nPiBwYXJhbWV0ZXJzID0gWyJOQlRZIjogaW5OQlRZLCAiTkJJRCI6IGluTkJJRC50b1N0cmluZygpXQ0KICAgIG5leHROdW1iZXIgPSAiIiANCiAgDQogICAgQ2xvc3VyZTw/PiBoYW5kbGVyID0geyBNYXA8U3RyaW5nLCBTdHJpbmc+IHJlc3BvbnNlIC0+DQogICAgICBpZiAocmVzcG9uc2UuY29udGFpbnNLZXkoJ2Vycm9yTXNpZCcpIHx8IHJlc3BvbnNlLmVycm9yID09IHRydWUpIHsgICAgIA0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgaWYocmVzcG9uc2UuTkJOUiAhPSBudWxsKXsNCiAgICAgICAgICBuZXh0TnVtYmVyID0gcmVzcG9uc2UuTkJOUg0KICAgICAgICAgIGlmIChuZXh0TnVtYmVyLmlzTG9uZygpKSB7DQogICAgICAgICAgICBuZXh0TnVtYmVyTG9uZyA9IG5leHROdW1iZXIgYXMgTG9uZw0KICAgICAgICAgIH0NCiAgICAgICAgICBsb2dnZXIuZGVidWcoIm5leHROdW1iZXIgIiArIG5leHROdW1iZXIgKyAiIG5leHROdW1iZXJMb25nICIgKyBuZXh0TnVtYmVyTG9uZykNCiAgICAgICAgfSANCiAgICAgIH0NCiAgICB9DQogDQogICAgbWlDYWxsZXIuY2FsbCgiQ1JTMTY1TUkiLCAiUnR2TmV4dE51bWJlciIsIHBhcmFtZXRlcnMsIGhhbmRsZXIpDQogICAgaWYgKG5leHROdW1iZXIgPT0gIiIpIHsNCiAgICAgIHJldHVybiBmYWxzZQ0KICAgIH0NCiAgICByZXR1cm4gdHJ1ZQ0KICB9DQogICANCiANCiAgDQogICAgDQogICAvKg0KICAgIGdldEJvbE5vIC0gQmlsbCBvZiBMYWRpbmcgbnVtYmVyDQogICovDQogIFN0cmluZyBnZXRCb2xObyhTdHJpbmcgaW5GRE5PKSB7ICANCiAgICANCiAgICBTdHJpbmcgbnVtYmVyID0gZ2V0Q1NZUEFSKGdldE1JVFdITCh3YXJlaG91c2UpKSArIGluRkROTw0KICAgIGxvZ2dlci5kZWJ1ZygiZ2V0Qm9sTm8gbnVtYmVyICIgKyBudW1iZXIgKyAiIGxlbmd0aCAiICsgbnVtYmVyLmxlbmd0aCgpICsgIiBpbkZETk8gIiArIGluRkROTyArICIgQ1JTNzA2ICIgKyBnZXRDU1lQQVIoZ2V0TUlUV0hMKHdhcmVob3VzZSkpKQ0KICAgIGludCBzdW0gPSAwDQogICAgYm9vbGVhbiBhbHRlcm5hdGUgPSBmYWxzZQ0KDQogICAgZm9yIChpbnQgaSA9IG51bWJlci5sZW5ndGgoKSAtIDE7IGkgPj0gMDsgaS0tKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICBpbnQgbiA9IEludGVnZXIucGFyc2VJbnQobnVtYmVyLnN1YnN0cmluZyhpLCBpICsgMSkpDQogICAgICAgIGlmIChhbHRlcm5hdGUpIHsNCiAgICAgICAgICAgIG4gKj0gMg0KICAgICAgICAgICAgaWYgKG4gPiAxNSkgew0KICAgICAgICAgICAgICAgIG4gPSAobiAlIDE2KSArIDENCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBzdW0gKz0gbg0KICAgICAgICBhbHRlcm5hdGUgPSAhYWx0ZXJuYXRlDQogICAgfQ0KDQogICAgaW50IGNoZWNrRGlnaXQgPSAoMTYgLSAoc3VtICUgMTYpKSAlIDE2IA0KICAgIGxvZ2dlci5kZWJ1ZygiZ2V0Qm9sTm8gY2hlY2tEaWdpdCAiICsgY2hlY2tEaWdpdCkgDQogICAgDQogICAgcmV0dXJuIG51bWJlciArIGNoZWNrRGlnaXQudG9TdHJpbmcoKQ0KDQogIH0NCg0KICAgICAgIA0KICAvKg0KICAgIHJldHJpZXZlIGFuZCBjaGVjayBpbnB1dCBwYXJhbWV0ZXJzIA0KCSovDQoJYm9vbGVhbiByZXRyaWV2ZUlucHV0UGFyYW1ldGVycygpIHsNCgkgIA0KCQljb21wYW55ID0gKEludGVnZXIpcHJvZ3JhbS5nZXRMREFaRCgpLkNPTk8gIA0KICAgIGluT3V0ID0gcmVtb3ZlTnVsbGZyb21JbnRPYmplY3QobWkuaW4uZ2V0KCJJTk9VIikpICAgIA0KICAgIGRvY3VtZW50TnVtYmVyID0gcmVtb3ZlTnVsbGZyb21TdHJpbmdPYmplY3QobWkuaW4uZ2V0KCJET05SIikpDQogICAgZG9jdW1lbnRWYXJpYW50ID0gcmVtb3ZlTnVsbGZyb21TdHJpbmdPYmplY3QobWkuaW4uZ2V0KCJET1ZBIikpIA0KICAgIHNoaXBtZW50ID0gcmVtb3ZlTnVsbGZyb21JbnRPYmplY3QobWkuaW4uZ2V0KCJLQ09OIikpICAgDQogICANCiAgICBpZighY2hlY2tNSERJU0goaW5PdXQsIHNoaXBtZW50KSl7DQogICAgICBtaS5lcnJvcigiVGhlIHNoaXBtZW50ICR7c2hpcG1lbnR9IGRvZXMgbm90IGV4aXN0IGluIE1IRElTSCIpDQogICAgICByZXR1cm4gZmFsc2UNCiAgICB9DQoNCiAgICANCiAgICBpZighaXNWYWxpZERvY3VtZW50KGRvY3VtZW50TnVtYmVyLCBkb2N1bWVudFZhcmlhbnQpKXsNCiAgICAgIG1pLmVycm9yKCJUaGUgZG9jdW1lbnROdW1iZXIgJHtkb2N1bWVudE51bWJlcn0vICR7ZG9jdW1lbnRWYXJpYW50fSBpcyBub3QgdmFsaWQiKQ0KICAgICAgcmV0dXJuIGZhbHNlDQogICAgfQ0KICAgIA0KICAgIGdldE9ERURPQygpDQogICAgDQogICAgcmV0cmlldmVUb2RheXNEYXRlKCkNCiAgICANCiAgICByZXR1cm4gdHJ1ZQ0KCX0NCgkNCgkNCiAgIC8qDQogICAgUmV0dXJuIHRydWUgaWYgcmVjb3JkIGV4aXN0LiANCiAgKi8NCiAgYm9vbGVhbiBjaGVja0RET0NVWCgpIHsNCiAgICANCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJERE9DVVgiKS5pbmRleCgiMTAiKS5idWlsZCgpICANCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIGNvbnRhaW5lci5zZXQoIkRCQ09OTyIsIGNvbXBhbnkpDQogICAgY29udGFpbmVyLnNldCgiREJJTk9VIiwgaW5PdXQpDQogICAgY29udGFpbmVyLnNldCgiREJETElYIiwgMCkNCiAgICBjb250YWluZXIuc2V0KCJEQkRPTlIiLCBkb2N1bWVudE51bWJlcikNCiAgICBjb250YWluZXIuc2V0KCJEQkRPVkEiLCBkb2N1bWVudFZhcmlhbnQpIA0KICAgIGNvbnRhaW5lci5zZXQoIkRCS0NPTiIsIHNoaXBtZW50KSANCiAgICANCiAgICBib29sZWFuIGZvdW5kID0gcXVlcnkucmVhZChjb250YWluZXIpDQogICAgDQogICAgaWYgKCFmb3VuZCkgIHsgIA0KICAgICAgcmV0dXJuIGZhbHNlICANCiAgICB9DQogICAgIA0KICAgIHJldHVybiB0cnVlDQogIH0NCiAgDQogIA0KDQogIAkNCiAgLyoNCiAgICBSZXR1cm4gdHJ1ZSBpZiByZWNvcmQgZXhpc3QuIA0KICAqLw0KICBib29sZWFuIGdldE9ERURPQygpIHsNCiAgICANCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJPREVET0MiKS5zZWxlY3Rpb24oIk9ZTkJJRCIsICJPWU5CVFkiKS5pbmRleCgiMDAiKS5idWlsZCgpICANCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIGNvbnRhaW5lci5zZXQoIk9ZQ09OTyIsIGNvbXBhbnkpIA0KICAgIGNvbnRhaW5lci5zZXQoIk9ZRE9OUiIsIGRvY3VtZW50TnVtYmVyKQ0KICAgIGNvbnRhaW5lci5zZXQoIk9ZRE9WQSIsIGRvY3VtZW50VmFyaWFudCkgIA0KICAgIA0KICAgIGJvb2xlYW4gZm91bmQgPSBxdWVyeS5yZWFkKGNvbnRhaW5lcikNCiAgICANCiAgICBpZiAoIWZvdW5kKSAgew0KICAgICAgcmV0dXJuIGZhbHNlICANCiAgICB9DQogICAgDQogICAgbnVtYmVyU2VyaWVUeXBlID0gY29udGFpbmVyLmdldFN0cmluZygiT1lOQlRZIikgDQogICAgbnVtYmVyU2VyaWUgPSBjb250YWluZXIuZ2V0Q2hhcigiT1lOQklEIikgDQogICAgDQogICAgcmV0dXJuIHRydWUNCiAgfQ0KICANCiAgLyoNCiAgICBnZXRNSVRXSEwgLSByZXR1cm4gZGl2aXNpb24gZm9yIGFjdHVhbCB3YXJlaG91c2UNCiAgKi8NCiAgU3RyaW5nIGdldE1JVFdITChTdHJpbmcgaW5XSExPKSB7DQogICAgREJBY3Rpb24gcXVlcnkgPSBkYXRhYmFzZS50YWJsZSgiTUlUV0hMIikuc2VsZWN0aW9uKCJNV0RJVkkiKS5pbmRleCgiMDAiKS5idWlsZCgpDQogICAgDQogICAgREJDb250YWluZXIgY29udGFpbmVyID0gcXVlcnkuZ2V0Q29udGFpbmVyKCkNCiAgICBjb250YWluZXIuc2V0KCJNV0NPTk8iLCBjb21wYW55KQ0KICAgIGNvbnRhaW5lci5zZXQoIk1XV0hMTyIsIGluV0hMTykgDQogICAgDQogICAgYm9vbGVhbiBmb3VuZCA9IHF1ZXJ5LnJlYWQoY29udGFpbmVyKQ0KICAgIA0KICAgIGlmICghZm91bmQpICB7DQogICAgICByZXR1cm4gIiIgIA0KICAgIH0NCiAgICAgDQogICAgcmV0dXJuIGNvbnRhaW5lci5nZXRTdHJpbmcoIk1XRElWSSIpDQogICAgICANCiAgfQ0KICANCiAgLyoNCiAgICBnZXRDU1lQQVIgLSByZXR1cm4gcGFyYW1ldGVyIGZyb20gQ1JTNzAyLCB1c2VkIHdoZW4gY3JlYXRpbmcgQm9sIG51bWJlcg0KICAqLw0KICBTdHJpbmcgZ2V0Q1NZUEFSKFN0cmluZyBpbkRJVkkpIHsNCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJDU1lQQVIiKS5zZWxlY3Rpb24oIkNQUEFSTSIpLmluZGV4KCIwMCIpLmJ1aWxkKCkNCiAgICANCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIGNvbnRhaW5lci5zZXQoIkNQQ09OTyIsIGNvbXBhbnkpDQogICAgY29udGFpbmVyLnNldCgiQ1BESVZJIiwgaW5ESVZJKSANCiAgICBjb250YWluZXIuc2V0KCJDUFNUQ08iLCAiQ1JTNzA2IikgDQogICAgDQogICAgYm9vbGVhbiBmb3VuZCA9IHF1ZXJ5LnJlYWQoY29udGFpbmVyKQ0KICAgIA0KICAgIGlmICghZm91bmQpICB7DQogICAgICByZXR1cm4gIiIgIA0KICAgIH0NCiAgICAgDQogICAgcmV0dXJuIGNvbnRhaW5lci5nZXRTdHJpbmcoIkNQUEFSTSIpLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDAsIDcpDQogICAgICANCiAgfQ0KICAgDQogICANCiAgIA0KICAgIC8qDQogICAgIEdldCB2YWx1ZSBmcm9tIE1IRElTSA0KICAgKi8NCiAgYm9vbGVhbiBjaGVja01IRElTSChpbnQgaW5JTk9VLCBpbnQgaW5DT05OKXsNCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJNSERJU0giKS5zZWxlY3Rpb24oIk9RV0hMTyIpLmluZGV4KCI0MCIpLmJ1aWxkKCkgICAgICAgICAgICAgDQogICAgDQogICAgREJDb250YWluZXIgY29udGFpbmVyID0gcXVlcnkuZ2V0Q29udGFpbmVyKCkNCiAgICBjb250YWluZXIuc2V0KCJPUUNPTk8iLCBjb21wYW55KQ0KICAgIGNvbnRhaW5lci5zZXQoIk9RSU5PVSIsIGluSU5PVSkNCiAgICBjb250YWluZXIuc2V0KCJPUUNPTk4iLCBpbkNPTk4pIA0KICAgIHF1ZXJ5LnJlYWRBbGwoY29udGFpbmVyLCAzLCAxLCByZWxlYXNlZEl0ZW1Qcm9jZXNzb3JNSERJU0gpICAgICANCiAgfQ0KICAgIA0KICBDbG9zdXJlPD8+IHJlbGVhc2VkSXRlbVByb2Nlc3Nvck1IRElTSCA9IHsgREJDb250YWluZXIgY29udGFpbmVyICAtPiANCiAgICANCiAgICB3YXJlaG91c2UgPSBjb250YWluZXIuZ2V0U3RyaW5nKCJPUVdITE8iKSAgDQogICAgDQogICAgcmV0dXJuIHRydWUNCiAgDQogICB9IA0KICANCiAgIA0KICAgLyoNCiAgICBSZXR1cm4gdHJ1ZSBpZiB2YWxpZCBkb2N1bWVudA0KICAqLw0KICBib29sZWFuIGlzVmFsaWREb2N1bWVudChTdHJpbmcgaW5ET05SLCBTdHJpbmcgaW5ET1ZBKSB7ICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgDQogICAgaWYgKGluRE9OUiA9PSAiOTIwIiAmJiBpbkRPVkEgPT0gIjAxIil7ICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgIHJldHVybiB0cnVlIA0KICAgIH0NCiAgICANCiAgICAgIHJldHVybiBmYWxzZSAgDQogIH0gDQogICANCiAgDQogIC8qDQogICAgR2V0IHRvZGF5cyBkYXRlDQogICovDQogIHB1YmxpYyB2b2lkIHJldHJpZXZlVG9kYXlzRGF0ZSgpIHsNCiAgICBMb2NhbERhdGVUaW1lIGRhdGVUaW1lID0gTG9jYWxEYXRlVGltZS5ub3coKQ0KICAgIGVudHJ5RGF0ZSA9IGRhdGVUaW1lLmZvcm1hdChEYXRlVGltZUZvcm1hdHRlci5vZlBhdHRlcm4oInl5eXlNTWRkIikpLnRvSW50ZWdlcigpDQogICAgZW50cnlUaW1lID0gZGF0ZVRpbWUuZm9ybWF0KERhdGVUaW1lRm9ybWF0dGVyLm9mUGF0dGVybigiSEhtbXNzIikpLnRvSW50ZWdlcigpDQogIH0NCiAgDQogICANCiAgLy8gY2hlY2sgaWYgZmllbGQgZnJvbSBNSSBpcyBudWxsLiBSZXR1cm4gemVybyBpbiB0aGF0IGNhc2UNCiAgaW50IHJlbW92ZU51bGxmcm9tSW50T2JqZWN0KE9iamVjdCBmaWVsZCl7DQogICAgIGlmIChmaWVsZCA9PSBudWxsKSB7ICANCiAgICAgICByZXR1cm4gMA0KICAgICB9IGVsc2Ugew0KICAgICAgIHJldHVybiAoaW50KSBmaWVsZA0KICAgICB9DQogICB9DQogICANCiAgDQogIA0KICAgLy8gY2hlY2sgaWYgZmllbGQgZnJvbSBNSSBpcyBudWxsLiBSZXR1cm4gemVybyBpbiB0aGF0IGNhc2UNCiAgICBTdHJpbmcgcmVtb3ZlTnVsbGZyb21TdHJpbmdPYmplY3QoT2JqZWN0IGZpZWxkKXsNCiAgICAgaWYgKGZpZWxkID09IG51bGwpIHsgIA0KICAgICAgIHJldHVybiAiIg0KICAgICB9IGVsc2Ugew0KICAgICAgIHJldHVybiBmaWVsZA0KICAgICB9DQogICB9DQogIA0KfQ=="}}}