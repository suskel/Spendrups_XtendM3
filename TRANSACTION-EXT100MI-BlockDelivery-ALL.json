{"programModules":{"EXT100MI":{"program":"EXT100MI","triggers":{},"transactions":{"BlockDelivery":{"sourceUuid":"0d602a7d-28cd-4d6f-80d5-21371b44713f","name":"BlockDelivery","program":"EXT100MI","description":"Block delivery","active":true,"multi":false,"modified":1732747025347,"modifiedBy":"EXT_SK","outputFields":[],"inputFields":[{"name":"DLIX","description":"Delivery ","length":11,"mandatory":true,"type":"N","refField":null}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"0d602a7d-28cd-4d6f-80d5-21371b44713f":{"uuid":"0d602a7d-28cd-4d6f-80d5-21371b44713f","updated":1752560548665,"updatedBy":"EXT_SK","created":1732745752606,"createdBy":"EXT_SK","apiVersion":"0.15","beVersion":"16.0.0.20250521011729.6","language":"GROOVY","codeHash":"633F0AD987EFAC550BBB72F75F232C077F9ECDB1A92B46715571ACB4B32F6F31","code":"LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCiBFeHRlbnNpb24gTmFtZTogRVhUMTAwTUkvQmxvY2tEZWxpdmVyeQ0KIFR5cGU6IEV4dGVuZE0zVHJhbnNhY3Rpb24NCiBTY3JpcHQgQXV0aG9yOiBTdXNhbm5hIEtlbGxhbmRlciAtIEVsdmVuaXRlDQogRGF0ZTogMjAyNC0xMS0yMw0KIERlc2NyaXB0aW9uOiBCbG9jayBkZWxpdmVyeSwgbGlrZSBvcHQgNTEgaW4gTVdTNDEwIA0KDQogUmV2aXNpb24gSGlzdG9yeToNCiBOYW1lICAgICAgICAgICAgICAgICAgICBEYXRlICAgICAgICAgICAgIFZlcnNpb24gICAgICAgICAgRGVzY3JpcHRpb24gb2YgQ2hhbmdlcw0KIFN1c2FubmEgS2VsbGFuZGVyICAgICAgIDIwMjQtMTEtMjMgICAgICAgMS4wICAgICAgICAgICAgICBTUDAwMTggLSBCbG9jayBkZWxpdmVyeSwgbGlrZSBvcHQgNTEgaW4gTVdTNDEwDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQppbXBvcnQgamF2YS50aW1lLkxvY2FsRGF0ZVRpbWUNCmltcG9ydCBqYXZhLnRpbWUuZm9ybWF0LkRhdGVUaW1lRm9ybWF0dGVyDQpwdWJsaWMgY2xhc3MgQmxvY2tEZWxpdmVyeSBleHRlbmRzIEV4dGVuZE0zVHJhbnNhY3Rpb24geyANCiAgcHJpdmF0ZSBmaW5hbCBNSUFQSSBtaQ0KICBwcml2YXRlIGZpbmFsIERhdGFiYXNlQVBJIGRhdGFiYXNlDQogIHByaXZhdGUgZmluYWwgUHJvZ3JhbUFQSSBwcm9ncmFtDQogIHByaXZhdGUgZmluYWwgTG9nZ2VyQVBJIGxvZ2dlcg0KICANCiAgaW50IGNvbXBhbnkgPSAwDQogIGxvbmcgZGVsaXZlcnkgPSAwIA0KICBTdHJpbmcgZGVsaXZlcnlTdGF0dXMgPSAiIg0KICBpbnQgYmxvY2tlZERlbGl2ZXJ5TnVtYmVyID0gMCANCiAgDQogIGludCBlbnRyeURhdGUgPSAwIA0KICANCiAgDQogIHB1YmxpYyBCbG9ja0RlbGl2ZXJ5KE1JQVBJIG1pLCBEYXRhYmFzZUFQSSBkYXRhYmFzZSwgUHJvZ3JhbUFQSSBwcm9ncmFtLCBMb2dnZXJBUEkgbG9nZ2VyKSB7DQogICAgIHRoaXMubWkgPSBtaQ0KICAgICB0aGlzLmRhdGFiYXNlID0gZGF0YWJhc2UNCiAgICAgdGhpcy5wcm9ncmFtID0gcHJvZ3JhbQ0KICAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcg0KICB9ICAgDQogIA0KICAvKg0KICAgIG1haW4gbWV0aG9kDQogICovDQogIHB1YmxpYyB2b2lkIG1haW4oKSB7ICANCiAgICAgaWYocmV0cmlldmVJbnB1dFBhcmFtZXRlcnMoKSkgeyANCiAgICAgICBibG9ja0RlbGl2ZXJ5KGRlbGl2ZXJ5KQ0KICAgICB9IA0KICB9DQogIA0KICAvKg0KICAgIGJsb2NrRGVsaXZlcnkgLSBibG9jayBkZWxpdmVyeSBhcyBkb25lIGluIE1XUzQxMCwgb3B0IDUxIA0KICAqLw0KCXB1YmxpYyB2b2lkIGJsb2NrRGVsaXZlcnkobG9uZyBpbkRMSVgpIHsgIA0KCSAgIA0KCSAgIGlmKGlzVmFsaWRUb0Jsb2NrKGluRExJWCkpIHsNCgkgICAgIGJsb2NrTUhESVNIKGluRExJWCkgICAgICAgICAgICAgICAgICAgICAgLy8gdXBkYXRlIHRvIEJMT1AgPSAxICAgDQoJICAgfSANCgl9IA0KCQ0KCQ0KCS8qDQogICAgaXNWYWxpZFRvQmxvY2sgLSB2YWxpZCBhcyBpbiBNV1M0MTAsIG9wdGlvbiA1MSBhbmQgTU1NTkdESVMNCgkqLw0KCWJvb2xlYW4gaXNWYWxpZFRvQmxvY2sobG9uZyBpbkRMSVgpIHsgDQoJICAgaWYgKGRlbGl2ZXJ5U3RhdHVzID4gIjA1IikgeyANCiAgICAgICAgbWkuZXJyb3IoIkNhbm5vdCBibG9jayBkZWxpdmVyeSAke2luRExJWH0gd2hlbiBkZWxpdmVyeSBzdGF0dXMgaXMgJHtkZWxpdmVyeVN0YXR1c30iKSANCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgIH0NCiAgICAgaWYgKGJsb2NrZWREZWxpdmVyeU51bWJlciA9PSAxKSB7IA0KICAgICAgICBtaS5lcnJvcigiQ2Fubm90IGJsb2NrIGRlbGl2ZXJ5ICR7aW5ETElYfSwgaXQgaXMgYWxyZWFkeSBibG9ja2VkIikgDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICB9ICANCgkNCgkgICByZXR1cm4gdHJ1ZQ0KCX0gDQoJIA0KCQ0KICAgLyoNCiAgICBibG9ja01IRElTSCAtIEJsb2NrIHJlY29yZCBpbiBNSERJU0gNCiAgKi8NCiAgcHVibGljIHZvaWQgYmxvY2tNSERJU0gobG9uZyBpbkRMSVgpeyANCiAgICANCiAgICAgREJBY3Rpb24gcXVlcnkgPSBkYXRhYmFzZS50YWJsZSgiTUhESVNIIikuaW5kZXgoIjAwIikuYnVpbGQoKSAgICAgICAgICAgICANCiAgICAgREJDb250YWluZXIgY29udGFpbmVyID0gcXVlcnkuZ2V0Q29udGFpbmVyKCkNCiAgICAgY29udGFpbmVyLnNldCgiT1FDT05PIiwgY29tcGFueSkNCiAgICAgY29udGFpbmVyLnNldCgiT1FJTk9VIiwgMSkNCiAgICAgY29udGFpbmVyLnNldCgiT1FETElYIiwgaW5ETElYKSANCiAgICAgcXVlcnkucmVhZExvY2soY29udGFpbmVyLCB1cGRhdGVDYWxsQmFja01IRElTSEJsb2NrKSANCiAgfQ0KICAgICAgDQogIENsb3N1cmU8Pz4gdXBkYXRlQ2FsbEJhY2tNSERJU0hCbG9jayA9IHsgTG9ja2VkUmVzdWx0IGxvY2tlZFJlc3VsdCAtPiAgDQogICAgIGxvY2tlZFJlc3VsdC5zZXQoIk9RQkxPUCIsIDEpIA0KICAgICAgDQogICAgIGxvY2tlZFJlc3VsdC5zZXQoIk9RTE1EVCIsIGVudHJ5RGF0ZSkgICAgDQogICAgIGludCBjaGFuZ2VObyA9IGxvY2tlZFJlc3VsdC5nZXQoIk9RQ0hOTyIpDQogICAgIGludCBuZXdDaGFuZ2VObyA9IGNoYW5nZU5vICsgMSANCiAgICAgbG9ja2VkUmVzdWx0LnNldCgiT1FDSE5PIiwgbmV3Q2hhbmdlTm8pIA0KICAgICBsb2NrZWRSZXN1bHQuc2V0KCJPUUNISUQiLCBwcm9ncmFtLmdldFVzZXIoKSkgDQogICAgIGxvY2tlZFJlc3VsdC51cGRhdGUoKSANCiAgICAgIA0KICB9DQogIA0KICAgDQogICAvKg0KICAgICBHZXQgdmFsdWUgZnJvbSBNSERJU0gNCiAgICovDQogIGJvb2xlYW4gY2hlY2tNSERJU0gobG9uZyBpbkRMSVgpew0KICAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJNSERJU0giKS5zZWxlY3Rpb24oIk9RUEdSUyIsICJPUUJMT1AiKS5pbmRleCgiMDAiKS5idWlsZCgpICAgICAgICAgICAgIA0KICAgIA0KICAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgICBjb250YWluZXIuc2V0KCJPUUNPTk8iLCBjb21wYW55KQ0KICAgICBjb250YWluZXIuc2V0KCJPUUlOT1UiLCAxKQ0KICAgICBjb250YWluZXIuc2V0KCJPUURMSVgiLCBpbkRMSVgpIA0KICAgIA0KICAgICBib29sZWFuIGZvdW5kID0gcXVlcnkucmVhZChjb250YWluZXIpDQogICAgIA0KICAgICBpZiAoIWZvdW5kKSAgew0KICAgICAgIHJldHVybiBmYWxzZSAgIA0KICAgICB9DQogICAgDQogICAgIGJsb2NrZWREZWxpdmVyeU51bWJlciA9IGNvbnRhaW5lci5nZXRJbnQoIk9RQkxPUCIpICAgICANCiAgICAgZGVsaXZlcnlTdGF0dXMgPSBjb250YWluZXIuZ2V0U3RyaW5nKCJPUVBHUlMiKSAgIA0KICAgIA0KICAgICByZXR1cm4gdHJ1ZSAgDQogIH0gDQogIA0KICAgLyoNCiAgICByZXRyaWV2ZSBhbmQgY2hlY2sgaW5wdXQgcGFyYW1ldGVycw0KCSovDQoJYm9vbGVhbiByZXRyaWV2ZUlucHV0UGFyYW1ldGVycygpIHsgDQoJICANCgkJIGNvbXBhbnkgPSAoSW50ZWdlcilwcm9ncmFtLmdldExEQVpEKCkuQ09OTyANCgkgICBkZWxpdmVyeSA9IHJlbW92ZU51bGxmcm9tTG9uZ09iamVjdChtaS5pbi5nZXQoIkRMSVgiKSkgDQoJIAkNCgkgICBpZighY2hlY2tNSERJU0goZGVsaXZlcnkpKXsNCgkgICAgICBtaS5lcnJvcigiRGVsaXZlcnkgJHtkZWxpdmVyeX0gZG9lcyBub3QgZXhpc3QgaW4gTVdTNDEwIikNCgkgICAgICByZXR1cm4gZmFsc2UNCgkgICB9IA0KCSAgDQoJICAgcmV0dXJuIHRydWUNCgkJDQoJCSByZXRyaWV2ZVRvZGF5c0RhdGUoKQ0KCX0gDQoJIA0KICANCiAgLyoNCiAgICBHZXQgdG9kYXlzIGRhdGUNCiAgKi8NCiAgcHVibGljIHZvaWQgcmV0cmlldmVUb2RheXNEYXRlKCkgew0KICAgICBMb2NhbERhdGVUaW1lIGRhdGVUaW1lID0gTG9jYWxEYXRlVGltZS5ub3coKQ0KICAgICBlbnRyeURhdGUgPSBkYXRlVGltZS5mb3JtYXQoRGF0ZVRpbWVGb3JtYXR0ZXIub2ZQYXR0ZXJuKCJ5eXl5TU1kZCIpKS50b0ludGVnZXIoKSANCiAgfQ0KICANCiAgDQogIC8qDQogICAgY2hlY2sgaWYgZmllbGQgZnJvbSBNSSBpcyBudWxsLiBSZXR1cm4gemVybyBpbiB0aGF0IGNhc2UgDQogICovIA0KICAgbG9uZyByZW1vdmVOdWxsZnJvbUxvbmdPYmplY3QoT2JqZWN0IGZpZWxkKXsNCiAgICAgaWYgKGZpZWxkID09IG51bGwpIHsgIA0KICAgICAgIHJldHVybiAwDQogICAgIH0gZWxzZSB7DQogICAgICAgcmV0dXJuIChsb25nKSBmaWVsZA0KICAgICB9DQogICB9DQogIA0KICAgDQp9"}}}